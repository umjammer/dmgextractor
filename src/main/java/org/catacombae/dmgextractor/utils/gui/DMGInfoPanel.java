/*-
 * Copyright (C) 2006 Erik Larsson
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * DMGInfoPanel.java
 *
 * Created on den 7 november 2006, 09:35
 */

package org.catacombae.dmgextractor.utils.gui;

import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JPanel;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.catacombae.dmg.udif.Koly;
import org.catacombae.util.Util.Pair;

/**
 * @author <a href="http://www.catacombae.org/" target="_top">Erik Larsson</a>
 */
public class DMGInfoPanel extends javax.swing.JPanel {
    private static class ContentPair extends Pair<String, Component> {
        public ContentPair(String s, Component c) { super(s, c); }
    }

    private final GeneralInfoPanel generalInfoPanel = new GeneralInfoPanel();
    private final KolyPanel kolyPanel = new KolyPanel();
    private final ContentPair contents[] = {
        new ContentPair("General info", generalInfoPanel),
        new ContentPair("plist", new PlistPanel()),
        new ContentPair("Unknown (256 bytes)", new UnknownDataViewPanel()),
        new ContentPair("Block map", new JPanel()), // N/I
        new ContentPair("Unknown (12 bytes)", new UnknownDataViewPanel()),
        new ContentPair("Apple Partition Map", new JPanel()), // N/I
        new ContentPair("Unknown (X bytes)", new UnknownDataViewPanel()),
        new ContentPair("koly", kolyPanel),
    };

    private CardLayout contentsCardLayout;

    /** Creates new form DMGInfoPanel */
    public DMGInfoPanel() {
        initComponents();
        
        ListModel listModel = new javax.swing.AbstractListModel() {
            public int getSize() { return contents.length; }
            public Object getElementAt(int i) { return contents[i].getA(); }
        };
        
        contentsList.setModel(listModel);
        
        contentsCardLayout = new CardLayout();
        contentsPane.setLayout(contentsCardLayout);
        
        
        // Now, let's add all components to contentsPane
        for(int i = 0; i < contents.length; ++i)
            contentsPane.add(contents[i].getB(), contents[i].getA());
        
	contentsList.addListSelectionListener(new ListSelectionListener() {
		public void valueChanged(ListSelectionEvent lse) {
		    //System.out.println(lse);
                    if(!lse.getValueIsAdjusting()) {
                        int index = contentsList.getSelectedIndex();
                        //System.out.println("Switching to " + index + "...");
                        contentsCardLayout.show(contentsPane,
                                contents[index].getA());
                    }
		}
	    });

        contentsList.setSelectedIndex(0);
    }

    public void setGeneralInfo(final String filename, long size,
            long numberOfPartitions)
    {
        generalInfoPanel.setFields(filename, size, numberOfPartitions);
    }

    public void setKoly(final Koly koly) {
        kolyPanel.setFields(koly);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        listContentsSplitter = new javax.swing.JSplitPane();
        contentsListScroller = new javax.swing.JScrollPane();
        contentsList = new javax.swing.JList();
        contentsPane = new javax.swing.JPanel();

        contentsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "General info", "plist", "Unknown (256 bytes)", "Block map", "Unknown (12 bytes)", "Apple Partition Map", "Unknown (X bytes)", "koly" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        contentsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        contentsListScroller.setViewportView(contentsList);

        listContentsSplitter.setLeftComponent(contentsListScroller);

        contentsPane.setLayout(new java.awt.CardLayout());

        listContentsSplitter.setRightComponent(contentsPane);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(listContentsSplitter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(listContentsSplitter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList contentsList;
    private javax.swing.JScrollPane contentsListScroller;
    private javax.swing.JPanel contentsPane;
    private javax.swing.JSplitPane listContentsSplitter;
    // End of variables declaration//GEN-END:variables
    
}
