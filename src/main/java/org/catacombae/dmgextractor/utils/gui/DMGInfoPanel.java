/*-
 * Copyright (C) 2006 Erik Larsson
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * DMGInfoPanel.java
 *
 * Created on den 7 november 2006, 09:35
 */

package org.catacombae.dmgextractor.utils.gui;

import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.AbstractListModel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.ListModel;

import org.catacombae.dmg.udif.Koly;
import org.catacombae.util.Util.Pair;


/**
 * @author <a href="http://www.catacombae.org/" target="_top">Erik Larsson</a>
 */
public class DMGInfoPanel extends javax.swing.JPanel {

    private static class ContentPair extends Pair<String, Component> {

        public ContentPair(String s, Component c) {
            super(s, c);
        }
    }

    private final GeneralInfoPanel generalInfoPanel = new GeneralInfoPanel();
    private final KolyPanel kolyPanel = new KolyPanel();
    private final ContentPair[] contents = {
            new ContentPair("General info", generalInfoPanel),
            new ContentPair("plist", new PlistPanel()),
            new ContentPair("Unknown (256 bytes)", new UnknownDataViewPanel()),
            new ContentPair("Block map", new JPanel()), // N/I
            new ContentPair("Unknown (12 bytes)", new UnknownDataViewPanel()),
            new ContentPair("Apple Partition Map", new JPanel()), // N/I
            new ContentPair("Unknown (X bytes)", new UnknownDataViewPanel()),
            new ContentPair("koly", kolyPanel),
    };

    private final CardLayout contentsCardLayout;

    /** Creates new form DMGInfoPanel */
    public DMGInfoPanel() {
        initComponents();

        ListModel<Object> listModel = new AbstractListModel<>() {
            @Override
            public int getSize() {
                return contents.length;
            }

            @Override
            public Object getElementAt(int i) {
                return contents[i].getA();
            }
        };

        contentsList.setModel(listModel);

        contentsCardLayout = new CardLayout();
        contentsPane.setLayout(contentsCardLayout);


        // Now, let's add all components to contentsPane
        for (ContentPair content : contents) contentsPane.add(content.getB(), content.getA());

        contentsList.addListSelectionListener(lse -> {
            //logger.log(Level.TRACE, lse);
            if (!lse.getValueIsAdjusting()) {
                int index = contentsList.getSelectedIndex();
//logger.log(Level.TRACE, "Switching to " + index + "...");
                contentsCardLayout.show(contentsPane,
                        contents[index].getA());
            }
        });

        contentsList.setSelectedIndex(0);
    }

    public void setGeneralInfo(String filename, long size, long numberOfPartitions) {
        generalInfoPanel.setFields(filename, size, numberOfPartitions);
    }

    public void setKoly(Koly koly) {
        kolyPanel.setFields(koly);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        listContentsSplitter = new JSplitPane();
        contentsListScroller = new JScrollPane();
        contentsList = new javax.swing.JList<>();
        contentsPane = new javax.swing.JPanel();

        contentsList.setModel(new AbstractListModel<>() {
            final String[] strings = {
                    "General info", "plist", "Unknown (256 bytes)", "Block map", "Unknown (12 bytes)",
                    "Apple Partition Map", "Unknown (X bytes)", "koly"
            };

            @Override
            public int getSize() {
                return strings.length;
            }

            @Override
            public Object getElementAt(int i) {
                return strings[i];
            }
        });
        contentsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        contentsListScroller.setViewportView(contentsList);

        listContentsSplitter.setLeftComponent(contentsListScroller);

        contentsPane.setLayout(new java.awt.CardLayout());

        listContentsSplitter.setRightComponent(contentsPane);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(listContentsSplitter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(listContentsSplitter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
        );
    }
    // </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<Object> contentsList;
    private javax.swing.JScrollPane contentsListScroller;
    private javax.swing.JPanel contentsPane;
    private javax.swing.JSplitPane listContentsSplitter;
    // End of variables declaration//GEN-END:variables
}
